<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

  <!--加载配置文件-->
  <context:property-placeholder location="classpath:dev/application.properties"/>

  <!--配置注解扫描,防止容器污染,排除Controller-->
  <context:component-scan base-package="top.yangluotong.ssm">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>



  <!--配置数据源,Druid连接池 只需要修改initialSize、minIdle、maxActive-->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <!-- 基本属性 url、user、password -->
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>

    <!-- 配置初始化大小、最小、最大 -->
    <property name="initialSize" value="1"/>
    <property name="minIdle" value="1"/>
    <property name="maxActive" value="20"/>

    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="60000"/>

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000"/>

    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000"/>

    <property name="validationQuery" value="SELECT 'x'"/>
    <property name="testWhileIdle" value="true"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>

    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

    <!-- 配置监控统计拦截的filters -->
    <property name="filters" value="stat"/>
  </bean>

  <bean id="statFilter" class="com.alibaba.druid.filter.stat.StatFilter">
    <property name="slowSqlMillis" value="10000"/>
    <property name="mergeSql" value="true"/>
  </bean>

  <!--配置_Druid和Spring关联监控配置-->
  <!--<bean id="druid-stat-interceptor"
    class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
  </bean>
  <bean id="druid-type-proxyCreator" class="com.alibaba.druid.support.spring.stat.BeanTypeAutoProxyCreator">
    &lt;!&ndash; 所有ABCInterface的派生类被拦截监控  &ndash;&gt;
    <property name="targetBeanType" value="xxxx.ABCInterface" />
    <property name="interceptorNames">
      <list>
        <value>druid-stat-interceptor</value>
      </list>
    </property>
  </bean>-->

  <!--配置数据源,Mybatis-->
  <!--<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource" >
    <property name="driver" value="${mysql.jdbc.driver}"/>
    <property name="url" value="${mysql.jdbc.url}"/>
    <property name="username" value="${mysql.jdbc.username}"/>
    <property name="password" value="${mysql.jdbc.password}"/>
  </bean>-->

  <!--配置sqlSessionFactory 整合mybatis-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!--配置数据源-->
    <property name="dataSource" ref="dataSource"/>
    <!--配置文件路径-->
    <property name="configLocation" value="classpath:mybatis-config.xml"/>
    <!--mapper文件路径-->
    <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    <property name="typeAliasesPackage" value="top.yangluotong.ssm.domain"/>
  </bean>

  <!--配置mybatis mapper扫描器-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="top.yangluotong.ssm.dao"/>
    <!--value not ref-->
    <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
  </bean>


  <!--jdbc控制类配置数据源-->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager"/>

  <!--配置通知 事务控制-->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="sava*" propagation="REQUIRED"/>
      <tx:method name="insert*" propagation="REQUIRED"/>
      <tx:method name="update*" propagation="REQUIRED"/>
      <tx:method name="delete*" propagation="REQUIRED"/>
      <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
      <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
    </tx:attributes>
  </tx:advice>

  <!--配置AOP-->
  <aop:config proxy-target-class="true">
    <!--<aop:advisor advice-ref="txAdvice" pointcut="execution(*)"/>-->
  </aop:config>


</beans>